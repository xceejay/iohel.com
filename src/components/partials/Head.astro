---
import { getImage, Font } from 'astro:assets';
import type { Seo } from '@/lib/constants'
import { DEFAULT_CONFIGURATION } from '@/lib/constants';
import { generateAbsoluteUrl } from '@/lib/utils';

interface Props {
  seo?: Seo;
}

const defaultSeo = DEFAULT_CONFIGURATION.seo;
const { seo } = Astro.props;

const image = await getImage({ src: seo?.image || defaultSeo.image, format: 'jpg'});
const seoImage = generateAbsoluteUrl(image.src);
---
<head>
  <meta charset="utf-8" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <Font cssVariable="--font-inter" preload />
  <Font cssVariable="--font-inter-variable" preload />
  { seo?.canonicalUrl && <link rel="canonical" href={seo?.canonicalUrl} />}
  <title>{seo?.title || defaultSeo.title}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <meta name="description" content={seo?.description || defaultSeo.description} />
  <slot name="keywords">
    <meta name="keywords" content={seo?.keywords || defaultSeo.keywords} />
  </slot>
  <meta name="generator" content={Astro.generator} />
  <meta name="robots" content={seo?.robots || defaultSeo.robots} />
  <!-- OpenGraph Meta -->
  <meta property="og:type" content={seo?.type ?? 'website'} />
  <meta property="og:site_name" content={defaultSeo.title} />
  <meta property="og:title" content={seo?.title || defaultSeo.title} />
  <meta property="og:description" content={seo?.description || defaultSeo.description} />
  <meta property="og:image" content={seoImage} />
  <meta property="og:image:width" content="1280" />
  <meta property="og:image:height" content="720" />
  <!-- Twitter Meta -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:creator" content={seo?.twitter?.creator || defaultSeo.twitter?.creator} />
  <meta property="twitter:site" content={seo?.twitter?.creator || defaultSeo.twitter?.creator} />
  <meta property="twitter:title" content={seo?.title || defaultSeo.title} />
  <meta property="twitter:description" content={seo?.description || defaultSeo.description} />
  <meta property="twitter:image" content={seoImage} />
  <script is:inline>
    // Prevent FOUC by applying theme before page renders
    (function() {
      const theme = localStorage.getItem('theme') || 
        (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      }
    })();
  </script>
  <slot />
</head>