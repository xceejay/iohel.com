---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import Container from "@/components/Container.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import "@fancyapps/ui/dist/fancybox/fancybox.css";

const entry = await getEntry("pages", "photography");

// images are in src/content/photos
const photos = import.meta.glob<{ default: ImageMetadata }>(
  "../../content/photos/*.{jpg,jpeg,png,webp,avif}",
);

// shuffle to add variety each build
const shuffled = Object.entries(photos).sort(() => Math.random() - 0.5);
---

<BaseLayout seo={entry.data.seo}>
  <Container as="section" class="py-6">
    <div class="flex flex-col gap-6">
      <span class="text-headings text-4xl">Photos I made</span>
    </div>
  </Container>

  <Container as="section" class="py-6">
    <div class="masonry" id="photoswipe">
      {
        shuffled.map(async ([_path, mod], index) => {
          const { default: imageData } = await mod();
          return (
            <a
              href={imageData.src}
              target="_blank"
              data-fancybox="gallery"
              aria-label="Open photo"
            >
              <Image
                format="webp"
                src={imageData}
                alt=""
                loading={index < 20 ? "eager" : "lazy"}
              />
            </a>
          );
        })
      }
    </div>
  </Container>
</BaseLayout>

<script>
  import { Fancybox } from "@fancyapps/ui/dist/fancybox/";
  import { Compactmode } from "@fancyapps/ui/dist/fancybox/fancybox.compactmode.js";
  import "@fancyapps/ui/dist/fancybox/fancybox.compactmode.css";

  Fancybox.bind("[data-fancybox='gallery']", {
    plugins: { Compactmode },
    Thumbs: { type: "classic", showOnStart: false },
    Carousel: { Arrows: true },
    Toolbar: { display: { left: [], middle: [], right: ["close"] } },
  });
</script>

<style>
/* Masonry within Container using column-width so mobile can still show 2+ columns */
.masonry {
  --gap: 12px;
  column-gap: var(--gap);
  column-width: 150px; /* browser will create as many columns as fit */
}

/* Nudge widths at very small screens to keep 2 columns where possible */
@media (max-width: 400px) {
  .masonry { column-width: 130px; }
}

.masonry a {
  display: inline-block;
  width: 100%;
  margin: 0 0 var(--gap);
  border-radius: 10px;
  overflow: hidden;
  break-inside: avoid;
}

.masonry a img {
  width: 100%;
  height: auto;
  display: block;
  transition: transform 0.25s ease;
}

.masonry a:hover img {
  transform: scale(1.03);
}

.masonry a:focus-visible {
  outline: 3px solid var(--outline, #7aa2ff);
  outline-offset: 2px;
}

</style>
